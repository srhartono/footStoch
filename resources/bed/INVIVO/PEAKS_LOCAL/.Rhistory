for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
#   as.integer(min(end2$end/divby))
# #  sd(end2$end)
#   dm3b = get_dm3(end2, divby, 1)
#   dm3c = dm3b
#   if (dim(dm3c[dm3c$end > 0,])[1] == 0) {next}
#   if (dim(dm3c[dm3c$end > 0,])[1] > 0) {dm3c = dm3c[dm3c$end > 0,]}
#   if (dim(dm3c[dm3c$end <= dm3c$x,])[1] > 0) {dm3c = dm3c[dm3c$end <= dm3c$x,]}
#   dm3c$end = xbeg0 #dm3c$end/1 + xbeg0
#   points(dm3c$end,dm3c$x,col='blue4',pch=15)
#   #  print(paste(dm3c$end,dm3c$x))
#     #lines(dm3c$end,dm3c$x,col='purple4',lwd=1)
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.01)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.99)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(xend0,min(beg2$beg/divby),col='red4',pch=15)
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.01)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.99)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(min(beg2$beg/divby),xend0,col='red4',pch=15)
}
xends = dm3[dm3$end != 0,]$x
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/50,col='red4')
#lines(dm3$x,dm3$beg/5,col='red4')
#lines(dm3$end/5,dm3$x,col='blue4')
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.01)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.99)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(max(beg2$beg/divby),xend0,col='red4',pch=15)
}
length(xends)
xends = dm3[dm3$end != 0,]$x
length(xends)
xends
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
points(dm3[dm3$end != 0,]$end/50,dm3[dm3$beg != 0,]$x,col='red4')
points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/50,col='red4')
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
points(dm3[dm3$end != 0,]$end/50,dm3[dm3$beg != 0,]$x,col='blue4')
points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/50,col='red4')
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
divby = 100
dm3 = get_dm3(dm2, divby, 5)
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
divby = 15
dm3 = get_dm3(dm2, divby, 5)
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
xbegs = dm3[dm3$beg != 0,]$x
divby = 15
dm3 = get_dm3(dm2, divby, 5)
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
#points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
#points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
lines(dm3$x,dm3$beg/5,col='red4')
lines(dm3$end/5,dm3$x,col='blue4')
head(dm3)
dm3
xends = dm3[dm3$end != 0,]$x
xends
xends = dm3[dm3$end != 0,]$x
i = 13
xend0 = xends[i]
xend0
i = 12
xend0 = xends[i]
xend0
xends = dm3[dm3$end != 0,]$x
maxes = c(0)
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.01)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.99)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
maxes[i] = max(beg2$beg/divby)
points(max(beg2$beg/divby),xend0,col='red4',pch=15)
}
maxes
xends
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
#points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
#points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
lines(dm3$x,dm3$beg/5,col='red4')
lines(dm3$end/5,dm3$x,col='blue4')
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.05)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.95)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(min(beg2$beg/divby),xend0,col='red4',pch=15)
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.25)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.75)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(min(beg2$beg/divby),xend0,col='red4',pch=15)
}
a = unique(as.integer(end2$end/divby)); a[order(a)]
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
#points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
#points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
lines(dm3$x,dm3$beg/5,col='red4')
lines(dm3$end/5,dm3$x,col='blue4')
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.25)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.75)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(min(beg2$beg/divby),xend0,col='red4',pch=15)
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.25)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.75)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(min(beg2$beg/divby),xend0,col='red4',pch=15)
print(dim(beg2)[1])
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.15)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.85)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(min(beg2$beg/divby),xend0,col='red4',pch=15)
print(dim(beg2)[1])
}
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
#points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
#points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
lines(dm3$x,dm3$beg/5,col='red4')
lines(dm3$end/5,dm3$x,col='blue4')
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.15)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.85)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(min(beg2$beg/divby),xend0,col='red4',pch=15)
print(dim(beg2)[1])
}
divby = 100
dm3 = get_dm3(dm2, divby, 5)
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
#points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
#points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
lines(dm3$x,dm3$beg/5,col='red4')
lines(dm3$end/5,dm3$x,col='blue4')
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.15)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.85)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(min(beg2$beg/divby),xend0,col='red4',pch=15)
print(dim(beg2)[1])
}
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
#points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
#points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
lines(dm3$x,dm3$beg/5,col='red4')
lines(dm3$end/5,dm3$x,col='blue4')
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xends = dm3[dm3$end != 0,]$x
for (i in seq(length(xends),1,-1)) {
xend0 = xends[i]
if (dim(dm4[as.integer(dm4$end/divby) > xend0,])[1]== 0) {next}
beg2 = dm4[as.integer(dm4$end/divby) >= xend0,]
beg3min = quantile(as.integer(beg2$beg/divby),probs = 0.05)
beg3max = quantile(as.integer(beg2$beg/divby),probs = 0.95)
beg2 = beg2[beg2$beg/divby > beg3min & beg2$beg/divby < beg3max,]
points(min(beg2$beg/divby),xend0,col='red4',pch=15)
print(dim(beg2)[1])
}
kmeans(x = c(1,2,10,12,14),2)
a = kmeans(x = c(1,2,10,12,14),2)
a
a$cluster
temp = kmeans(as.integer(end2$end/divby),k = 1)
xbegs = dm3[dm3$beg != 0,]$x
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
i
end2
temp = kmeans(as.integer(end2$end/divby),3)
head(temp)
head(temp$cluster)
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
#points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
#points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
lines(dm3$x,dm3$beg/5,col='red4')
lines(dm3$end/5,dm3$x,col='blue4')
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),3)
end2 = cbind(end2, temp$cluster)
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),3)
end2 = cbind(end2, temp$cluster)
for (j in 1:max(unique(temp$cluster))) {
points(xbeg0,min(temp[temp$cluster == j,]$end/divby),col='blue4',pch=15)
}
#end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
#end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
#end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
#  points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),3)
end2 = cbind(end2, temp$cluster)
for (j in 1:max(unique(end$cluster))) {
points(xbeg0,min(end[end$cluster == j,]$end/divby),col='blue4',pch=15)
}
#end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
#end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
#end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
#  points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),3)
end2 = cbind(end2, temp$cluster)
for (j in 1:max(unique(end2$cluster))) {
points(xbeg0,min(end2[end2$cluster == j,]$end/divby),col='blue4',pch=15)
}
#end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
#end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
#end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
#  points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
divby = 200
dm3 = get_dm3(dm2, divby, 5)
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
#points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
#points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
lines(dm3$x,dm3$beg/5,col='red4')
lines(dm3$end/5,dm3$x,col='blue4')
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),3)
end2 = cbind(end2, temp$cluster)
for (j in 1:max(unique(end2$cluster))) {
points(xbeg0,min(end2[end2$cluster == j,]$end/divby),col='blue4',pch=15)
}
#end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
#end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
#end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
#  points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),3)
end2 = cbind(end2, temp$cluster)
for (j in 1:max(unique(end2$cluster))) {
points(xbeg0,min(end2[end2$cluster == j,]$end/divby),col='blue4',pch=15)
points(xbeg0,max(end2[end2$cluster == j,]$end/divby),col='blue4',pch=15)
}
#end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
#end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
#end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
#  points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),2)
end2 = cbind(end2, temp$cluster)
for (j in 1:max(unique(end2$cluster))) {
points(end2$beg,min(end2[end2$cluster == j,]$end/divby),col='blue4',pch=15)
points(end2$beg,max(end2[end2$cluster == j,]$end/divby),col='blue4',pch=15)
}
#end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
#end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
#end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
#  points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),2)
end2 = cbind(end2, temp$cluster)
for (j in 1:max(unique(end2$cluster))) {
temp = end2[end2$cluster == j,]
points(temp$beg/divby,temp$end/divby,col='blue4',pch=15)
}
#end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
#end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
#end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
#  points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
colors = c("red4","blue4","green4")
colors = c("red4","blue4","green4")
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),2)
end2 = cbind(end2, temp$cluster)
for (j in 1:max(unique(end2$cluster))) {
temp = end2[end2$cluster == j,]
points(temp$beg/divby,temp$end/divby,col=colors[j],pch=15)
}
#end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
#end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
#end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
#  points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
#points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
#points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
lines(dm3$x,dm3$beg/5,col='red4')
lines(dm3$end/5,dm3$x,col='blue4')
colors = c("red4","blue4","green4")
xbegs = dm3[dm3$beg != 0,]$x
for (i in seq(length(xbegs),1,-1)) {
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),3)
end2 = cbind(end2, temp$cluster)
for (j in 1:max(unique(end2$cluster))) {
temp = end2[end2$cluster == j,]
points(temp$beg/divby,temp$end/divby,col=colors[j],pch=15)
}
#end3min = quantile(as.integer(end2$end/divby),probs = 0.01)
#end3max = quantile(as.integer(end2$end/divby),probs = 0.99)
#end2 = end2[end2$end/divby > end3min & end2$end/divby < end3max,]
#  points(xbeg0,min(end2$end/divby),col='blue4',pch=15)
}
i = 1
plot(NA,xlim=c(0,5000/divby),ylim=c(0,5000/divby))
points(dm2$beg/divby,dm2$end/divby,pch=18,col='grey')
lines(c(0,5000/divby),c(0,5000/divby))
#points(dm3[dm3$end != 0,]$end/divby,dm3[dm3$beg != 0,]$x,col='blue4')
#points(dm3[dm3$beg != 0,]$x,dm3[dm3$beg != 0,]$beg/divby,col='red4')
lines(dm3$x,dm3$beg/5,col='red4')
lines(dm3$end/5,dm3$x,col='blue4')
colors = c("red4","blue4","green4")
xbegs = dm3[dm3$beg != 0,]$x
xbeg0 = xbegs[i]
if (dim(dm4[as.integer(dm4$beg/divby) > xbeg0,])[1]== 0) {next}
end2 = dm4[as.integer(dm4$beg/divby) >= xbeg0,]
temp = kmeans(as.integer(end2$end/divby),3)
end2 = cbind(end2, temp$cluster)
for (j in 1:max(unique(end2$cluster))) {
temp = end2[end2$cluster == j,]
points(temp$beg/divby,temp$end/divby,col=colors[j],pch=15)
}
